{"remainingRequest":"/Users/atul/Desktop/chat-app/node_modules/babel-loader/lib/index.js!/Users/atul/Desktop/chat-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/atul/Desktop/chat-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/atul/Desktop/chat-app/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/atul/Desktop/chat-app/src/components/Chat.vue","mtime":1580060018014},{"path":"/Users/atul/Desktop/chat-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/atul/Desktop/chat-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/atul/Desktop/chat-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/atul/Desktop/chat-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBOZXdNZXNzYWdlIGZyb20gIkAvY29tcG9uZW50cy9OZXdNZXNzYWdlIjsKaW1wb3J0IGRiIGZyb20gIkAvZmlyZWJhc2UvaW5pdCI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDaGF0IiwKICBwcm9wczogWyJuYW1lIl0sCiAgY29tcG9uZW50czogewogICAgTmV3TWVzc2FnZTogTmV3TWVzc2FnZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lc3NhZ2VzOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciByZWYgPSBkYi5jb2xsZWN0aW9uKCJtZXNzYWdlcyIpLm9yZGVyQnkoInRpbWVzdGFtcCIpOwogICAgcmVmLm9uU25hcHNob3QoZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgIHNuYXBzaG90LmRvY0NoYW5nZXMoKS5mb3JFYWNoKGZ1bmN0aW9uIChjaGFuZ2UpIHsKICAgICAgICBpZiAoY2hhbmdlLnR5cGUgPT0gImFkZGVkIikgewogICAgICAgICAgdmFyIGRvYyA9IGNoYW5nZS5kb2M7CgogICAgICAgICAgX3RoaXMubWVzc2FnZXMucHVzaCh7CiAgICAgICAgICAgIGlkOiBkb2MuaWQsCiAgICAgICAgICAgIG5hbWU6IGRvYy5kYXRhKCkubmFtZSwKICAgICAgICAgICAgY29udGVudDogZG9jLmRhdGEoKS5jb250ZW50LAogICAgICAgICAgICB0aW1lc3RhbXA6IG1vbWVudChkb2MuZGF0YSgpLnRpbWVzdGFtcCkuZm9ybWF0KCJsbGwiKQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,EAAA,MAAA,iBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA,CAAA,MAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAHA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAVA;AAWA,EAAA,OAXA,qBAWA;AAAA;;AACA,QAAA,GAAA,GAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,OAAA,CAAA,WAAA,CAAA;AACA,IAAA,GAAA,CAAA,UAAA,CAAA,UAAA,QAAA,EAAA;AACA,MAAA,QAAA,CAAA,UAAA,GAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,IAAA,OAAA,EAAA;AACA,cAAA,GAAA,GAAA,MAAA,CAAA,GAAA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,YAAA,EAAA,EAAA,GAAA,CAAA,EADA;AAEA,YAAA,IAAA,EAAA,GAAA,CAAA,IAAA,GAAA,IAFA;AAGA,YAAA,OAAA,EAAA,GAAA,CAAA,IAAA,GAAA,OAHA;AAIA,YAAA,SAAA,EAAA,MAAA,CAAA,GAAA,CAAA,IAAA,GAAA,SAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AAJA,WAAA;AAMA;AACA,OAVA;AAWA,KAZA;AAaA;AA1BA,CAAA","sourcesContent":["<template>\n  <div class=\"chat container\">\n    <h2 class=\"center blue-text\">Just Chat</h2>\n    <div class=\"card\">\n      <div class=\"card-content\">\n        <ul class=\"messages\" v-chat-scroll>\n          <li v-for=\"message in messages\" :key=\"message.id\">\n            <span class=\"blue-text\">{{ message.name }}{{ \" : \" }}</span>\n            <span class=\"grey-text text-darken-3\">{{ message.content }}</span>\n            <span class=\"grey-text time\">{{ message.timestamp }}</span>\n          </li>\n        </ul>\n      </div>\n      <div class=\"card-action\">\n        <NewMessage :name=\"name\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NewMessage from \"@/components/NewMessage\";\nimport db from \"@/firebase/init\";\nimport moment from \"moment\";\n\nexport default {\n  name: \"Chat\",\n  props: [\"name\"],\n  components: {\n    NewMessage\n  },\n  data() {\n    return {\n      messages: []\n    };\n  },\n  created() {\n    let ref = db.collection(\"messages\").orderBy(\"timestamp\");\n    ref.onSnapshot(snapshot => {\n      snapshot.docChanges().forEach(change => {\n        if (change.type == \"added\") {\n          let doc = change.doc;\n          this.messages.push({\n            id: doc.id,\n            name: doc.data().name,\n            content: doc.data().content,\n            timestamp: moment(doc.data().timestamp).format(\"lll\")\n          });\n        }\n      });\n    });\n  }\n};\n</script>\n\n<style>\n.chat h2 {\n  font-size: 2.6em;\n  margin-bottom: 40px;\n}\n.chat span {\n  font-size: 1.4em;\n}\n.chat .time {\n  display: block;\n  font-size: 0.9em;\n}\n.messages {\n  max-height: 300px;\n  overflow: auto;\n}\n\n.messages::-webkit-scrollbar {\n  widows: 3px;\n}\n\n.messages::-webkit-scrollbar-track {\n  background: #ddd;\n}\n\n.messages::-webkit-slider-thumb {\n  background: #aaa;\n}\n</style>\n"],"sourceRoot":"src/components"}]}